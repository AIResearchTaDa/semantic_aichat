events {}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  server {
    listen 8080;

    # Раздаём front (index.html и статику)
    root /usr/share/nginx/html;
    index index.html;

    # Статические файлы (изображения, CSS, JS)
    location ~* \.(png|jpg|jpeg|gif|ico|css|js)$ {
      # В dev режимі відключаємо кешування для CSS/JS
      if ($uri ~* \.(css|js)$) {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
      }
      # Для зображень залишаємо кешування
      if ($uri ~* \.(png|jpg|jpeg|gif|ico)$) {
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
      }
    }

    # Явний favicon, щоб уникнути зайвих проксі
    location = /favicon.ico { try_files /favicon.ico =204; }

    # SPA-роутинг: любые пути -> index.html
    location / {
      try_files $uri /index.html;
    }

    # API-прокси: конкретні ендпоінти бекенда
    location = /search {
      proxy_pass http://api:8000/search;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_read_timeout 180s;
      proxy_connect_timeout 30s;
      proxy_send_timeout 180s;
    }

    location ^~ /chat/ {
      proxy_pass http://api:8000/chat/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_read_timeout 180s;
      proxy_connect_timeout 30s;
      proxy_send_timeout 180s;
    }
    # SSE endpoint (keep-alive, no buffering)
    location = /chat/search/sse {
      proxy_pass http://api:8000/chat/search/sse;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;
      proxy_buffering off;
      chunked_transfer_encoding off;
      add_header Cache-Control no-cache;
      add_header X-Accel-Buffering no;
    }
    location ^~ /cache/ {
      proxy_pass http://api:8000/cache/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_read_timeout 60s;
    }
    
    # API endpoints
    location ^~ /api/ {
      proxy_pass http://api:8000/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_read_timeout 180s;
      proxy_connect_timeout 30s;
      proxy_send_timeout 180s;
    }
    
    # Health check
    location = /health {
      proxy_pass http://api:8000/health;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_read_timeout 30s;
    }
    
    # Stats endpoint
    location = /stats {
      proxy_pass http://api:8000/stats;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_read_timeout 30s;
    }
    location = /config {
      proxy_pass http://api:8000/config;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_read_timeout 10s;
    }
    
    # Проксі для зовнішнього API TA-DA
    location ^~ /api/ta-da/ {
      proxy_pass https://api.ta-da.net.ua/v1.2/mobile/;
      proxy_set_header Host api.ta-da.net.ua;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Authorization $http_authorization;
      proxy_set_header User-Language $http_user_language;
      proxy_ssl_verify off;
      proxy_read_timeout 20s;
      proxy_connect_timeout 10s;
      proxy_send_timeout 20s;
      proxy_next_upstream error timeout http_500 http_502 http_503 http_504 invalid_header;
      
      # Обробка помилок
      proxy_intercept_errors on;
      error_page 500 502 503 504 = @ta_da_fallback;
    }
    
    # Fallback для недоступного API
    location @ta_da_fallback {
      add_header Content-Type application/json;
      return 200 '{"error": "API недоступний", "price": 0, "rating": 0}';
    }

  }
}
